#
#  daemons counts
#
{%- if ((pillar.get('keystone', {}) is defined) or (pillar.get('glance', {}) is defined) or (pillar.get('neutron', {}).server is defined)) %}
UserParameter=openstack.daemons_all.count,out=$(sudo /root/scripts/openstack_control.sh all status 2>&1); if [ $? -eq 0 ]; then echo "$out" |sed -r -e "/^(\[\{nodes|Cluster).*rabbit@ctl-[[:digit:]].*/d" -e "/^([[:space:]]\{).*('rabbit@ctl-[[:digit:]]',?){3}/ s/.*/rabbitmq is running.../g" -e "/^([[:space:]]\{partitions)|\.\.\.done./d" |grep "" -c; else echo 0; fi
UserParameter=openstack.daemons_running.count,out=$(sudo /root/scripts/openstack_control.sh all status 2>&1); if [ $? -eq 0 ]; then echo "$out" |sed -r -e "/^(\[\{nodes|Cluster).*rabbit@ctl-[[:digit:]].*/d" -e "/^([[:space:]]\{).*('rabbit@ctl-[[:digit:]]',?){3}/ s/.*/rabbitmq is running.../g" -e "/^([[:space:]]\{partitions)|\.\.\.done./d" |grep "is running" -c; else echo 0; fi
UserParameter=openstack.daemons_failing.count,out=$(sudo /root/scripts/openstack_control.sh all status 2>&1); if [ $? -eq 0 ]; then echo "$out" |sed -r -e "/^(\[\{nodes|Cluster).*rabbit@ctl-[[:digit:]].*/d" -e "/^([[:space:]]\{).*('rabbit@ctl-[[:digit:]]',?){3}/ s/.*/rabbitmq is running.../g" -e "/^([[:space:]]\{partitions)|\.\.\.done./d" |grep -v "is running" -c; else echo "ZBX_NOTSUPPORTED"; fi
{%- else %}
UserParameter=openstack.daemons_all.count,/root/scripts/openstack.control.sh all status |wc -l
UserParameter=openstack.daemons_running.count,/root/scripts/openstack.control.sh all status |grep running |wc -l
UserParameter=openstack.daemons_waiting.count,/root/scripts/openstack.control.sh all status |grep waiting |wc -l
{%- endif %}

