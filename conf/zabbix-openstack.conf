#
#  daemons counts
#
{%- if ((pillar.get('keystone', {}) is defined) or (pillar.get('glance', {}) is defined) or (pillar.get('neutron', {}).server is defined)) %}
UserParameter=openstack.daemons_all.count,out=$(sudo /root/scripts/openstack_control.sh all status 2>&1); if [ $? -eq 0 ]; then echo "$out" |sed -r -e "/^(\[\{nodes|Cluster).*rabbit@ctl-[[:digit:]].*/d" -e "/^([[:space:]]\{).*('rabbit@ctl-[[:digit:]]',?){3}/ s/.*/rabbitmq is running.../g" -e "/^([[:space:]]\{partitions)|\.\.\.done./d" |grep "" -c; else echo 0; fi
UserParameter=openstack.daemons_running.count,out=$(sudo /root/scripts/openstack_control.sh all status 2>&1); if [ $? -eq 0 ]; then echo "$out" |sed -r -e "/^(\[\{nodes|Cluster).*rabbit@ctl-[[:digit:]].*/d" -e "/^([[:space:]]\{).*('rabbit@ctl-[[:digit:]]',?){3}/ s/.*/rabbitmq is running.../g" -e "/^([[:space:]]\{partitions)|\.\.\.done./d" |grep "is running" -c; else echo 0; fi
UserParameter=openstack.daemons_failing.count,out=$(sudo /root/scripts/openstack_control.sh all status 2>&1); if [ $? -eq 0 ]; then echo "$out" |sed -r -e "/^(\[\{nodes|Cluster).*rabbit@ctl-[[:digit:]].*/d" -e "/^([[:space:]]\{).*('rabbit@ctl-[[:digit:]]',?){3}/ s/.*/rabbitmq is running.../g" -e "/^([[:space:]]\{partitions)|\.\.\.done./d" |grep -v "is running" -c; else echo "ZBX_NOTSUPPORTED"; fi
#
# nova-manage
#
UserParameter=openstack.nova_manage.enabled.count,out=$(timeout 10 sudo /usr/bin/nova-manage service list 2> /dev/null |sed '1d' |awk '{ print $4 }' |grep "enabled" -c); if [ "`echo "${PIPESTATUS[@]}" | tr -s ' ' + | bc`" -gt 1 ]; then echo "0"; else echo "$out"; fi
UserParameter=openstack.nova_manage.ok.count,out=$(timeout 10 sudo /usr/bin/nova-manage service list 2> /dev/null |sed '1d' |awk '{ print $4 " " $5 }' |grep "enabled" |grep ":-)" -c); if [ "`echo "${PIPESTATUS[@]}" | tr -s ' ' + | bc`" -gt 1 ]; then echo "0"; else echo "$out"; fi
UserParameter=openstack.nova_manage.fail.count,out=$(timeout 10 sudo /usr/bin/nova-manage service list 2> /dev/null |sed '1d' |awk '{ print $4 " " $5 }' |grep "enabled" |grep -v ":-)" -c); if [ "`echo "${PIPESTATUS[@]}" | tr -s ' ' + | bc`" -gt 1 ]; then echo "ZBX_NOTSUPPORTED"; else echo "$out"; fi
#
# neutron-agent-list
#
UserParameter=openstack.agent-list.state_up.count[*],out=$(timeout 10 neutron --os-username="$2" --os-password="$3" --os-tenant-name="$4" --os-auth-url=http://$1:5000/v2.0 agent-list 2> /dev/null |awk 'NR > 3 { print }' |sed '$d' |awk -F'|' '{print $6}'); if [ $? -eq 0 ]; then echo "$out" |grep "True" -c; else echo "0"; fi
UserParameter=openstack.agent-list.ok.count[*],out=$(timeout 10 neutron --os-username="$2" --os-password="$3" --os-tenant-name="$4" --os-auth-url=http://$1:5000/v2.0 agent-list 2> /dev/null |awk 'NR > 3 { print }' |sed '$d' |awk -F'|' '{print $5}'); if [ $? -eq 0 ]; then echo "$out" |grep -E -w ':-\)|xxx' |grep ":-)" -c; else echo "0"; fi
UserParameter=openstack.agent-list.fail.count[*],out=$(timeout 10 neutron --os-username="$2" --os-password="$3" --os-tenant-name="$4" --os-auth-url=http://$1:5000/v2.0 agent-list 2> /dev/null |awk 'NR > 3 { print }' |sed '$d' |awk -F'|' '{print $5}'); if [ $? -eq 0 ]; then echo "$out" |grep -E -w ':-\)|xxx' |grep -v ":-)" -c; else echo "ZBX_NOTSUPPORTED"; fi
{%- else %}
UserParameter=openstack.daemons_all.count,/root/scripts/openstack.control.sh all status |wc -l
UserParameter=openstack.daemons_running.count,/root/scripts/openstack.control.sh all status |grep running |wc -l
UserParameter=openstack.daemons_waiting.count,/root/scripts/openstack.control.sh all status |grep waiting |wc -l
{%- endif %}
